#!/usr/bin/env python3

import sys
import random

def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def pollards_rho(n):
    if n == 1:
        return [1]
    if n % 2 == 0:
        return [2, n // 2]
    
    x = random.randint(1, n - 1)
    y = x
    c = random.randint(1, n - 1)
    d = 1
    
    f = lambda x: (x * x + c) % n

    while d == 1:
        x = f(x)
        y = f(f(y))
        d = gcd(abs(x - y), n)
    
    if d == n:
        return None
    
    return [d, n // d]

def factorize(n):
    factors = pollards_rho(n)
    if factors:
        return f"{n}={factors[0]}*{factors[1]}"
    else:
        return f"{n} is prime or invalid"

if len(sys.argv) == 2:
    try:
        number = int(open(sys.argv[1], "r").read().strip())
        print(factorize(number))
    except FileNotFoundError:
        print("File not found.")
    except ValueError:
        print("Invalid number in the file.")

